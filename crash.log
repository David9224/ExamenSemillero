2020/12/02 15:08:53 [INFO] Terraform version: 0.13.5  
2020/12/02 15:08:53 [INFO] Go runtime version: go1.14.7
2020/12/02 15:08:53 [INFO] CLI args: []string{"C:\\Terraform\\terraform.exe", "apply"}
2020/12/02 15:08:53 [DEBUG] Attempting to open CLI config file: C:\Users\daaristizabal\AppData\Roaming\terraform.rc
2020/12/02 15:08:53 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/12/02 15:08:53 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2020/12/02 15:08:53 [DEBUG] ignoring non-existing provider search directory C:\Users\daaristizabal\AppData\Roaming\terraform.d\plugins
2020/12/02 15:08:53 [DEBUG] ignoring non-existing provider search directory C:\Users\daaristizabal\AppData\Roaming\HashiCorp\Terraform\plugins
2020/12/02 15:08:53 [INFO] CLI command args: []string{"apply"}
2020/12/02 15:08:53 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/12/02 15:08:53 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/12/02 15:08:53 [DEBUG] New state was assigned lineage "bd7476ba-43a7-9d4f-b29e-18759f9a2312"
2020/12/02 15:08:53 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/12/02 15:08:53 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/12/02 15:08:53 [TRACE] providercache.fillMetaCache: scanning directory .terraform\plugins
2020/12/02 15:08:53 [TRACE] getproviders.SearchLocalDirectory: .terraform\plugins is a symlink to .terraform\plugins
2020/12/02 15:08:53 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/aws v3.19.0 for windows_amd64 at .terraform\plugins\registry.terraform.io\hashicorp\aws\3.19.0\windows_amd64
2020/12/02 15:08:53 [TRACE] providercache.fillMetaCache: including .terraform\plugins\registry.terraform.io\hashicorp\aws\3.19.0\windows_amd64 as a candidate package for registry.terraform.io/hashicorp/aws 3.19.0
2020/12/02 15:08:54 [DEBUG] checking for provisioner in "."
2020/12/02 15:08:54 [DEBUG] checking for provisioner in "C:\\Terraform"
2020/12/02 15:08:54 [INFO] Failed to read plugin lock file .terraform\plugins\windows_amd64\lock.json: open .terraform\plugins\windows_amd64\lock.json: The system cannot find the path specified.
2020/12/02 15:08:54 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/12/02 15:08:54 [INFO] backend/local: starting Apply operation
2020/12/02 15:08:54 [TRACE] backend/local: requesting state manager for workspace "default"
2020/12/02 15:08:54 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/12/02 15:08:54 [TRACE] backend/local: requesting state lock for workspace "default"
2020/12/02 15:08:54 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/12/02 15:08:54 [TRACE] statemgr.Filesystem: existing snapshot has lineage "218d00a6-f204-0a9e-1542-cd07626af896" serial 20
2020/12/02 15:08:54 [TRACE] statemgr.Filesystem: locking terraform.tfstate using LockFileEx
2020/12/02 15:08:54 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/12/02 15:08:54 [TRACE] backend/local: reading remote state for workspace "default"
2020/12/02 15:08:54 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/12/02 15:08:54 [TRACE] statemgr.Filesystem: read snapshot with lineage "218d00a6-f204-0a9e-1542-cd07626af896" serial 20
2020/12/02 15:08:54 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/12/02 15:08:54 [TRACE] backend/local: building context for current working directory
2020/12/02 15:08:54 [TRACE] terraform.NewContext: starting
2020/12/02 15:08:54 [TRACE] terraform.NewContext: loading provider schemas
2020/12/02 15:08:54 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/aws"
2020-12-02T15:08:54.303-0500 [INFO]  plugin: configuring client automatic mTLS
2020-12-02T15:08:54.330-0500 [DEBUG] plugin: starting plugin: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe args=[.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe]
2020-12-02T15:08:54.350-0500 [DEBUG] plugin: plugin started: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe pid=17364
2020-12-02T15:08:54.350-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe
2020-12-02T15:08:54.481-0500 [INFO]  plugin.terraform-provider-aws_v3.19.0_x5.exe: configuring server automatic mTLS: timestamp=2020-12-02T15:08:54.412-0500
2020-12-02T15:08:54.508-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2020-12-02T15:08:54.508-0500
2020-12-02T15:08:54.508-0500 [DEBUG] plugin: using plugin: version=5
2020/12/02 15:08:54 [TRACE] GRPCProvider: GetSchema
2020-12-02T15:08:54.572-0500 [TRACE] plugin.stdio: waiting for stdio data
2020/12/02 15:08:54 [TRACE] GRPCProvider: Close
2020-12-02T15:08:54.661-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-12-02T15:08:54.686-0500 [DEBUG] plugin: plugin process exited: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe pid=17364
2020-12-02T15:08:54.686-0500 [DEBUG] plugin: plugin exited
2020/12/02 15:08:54 [TRACE] LoadSchemas: retrieving schema for provisioner "local-exec"
2020-12-02T15:08:54.686-0500 [DEBUG] plugin: starting plugin: path=C:\Terraform\terraform.exe args=[C:\Terraform\terraform.exe, internal-plugin, provisioner, local-exec]
2020-12-02T15:08:54.697-0500 [DEBUG] plugin: plugin started: path=C:\Terraform\terraform.exe pid=26764
2020-12-02T15:08:54.697-0500 [DEBUG] plugin: waiting for RPC address: path=C:\Terraform\terraform.exe
2020-12-02T15:08:54.923-0500 [DEBUG] plugin: using plugin: version=5
2020-12-02T15:08:54.924-0500 [TRACE] plugin.stdio: waiting for stdio data
2020-12-02T15:08:54.925-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-12-02T15:08:54.947-0500 [DEBUG] plugin: plugin process exited: path=C:\Terraform\terraform.exe pid=26764
2020-12-02T15:08:54.947-0500 [DEBUG] plugin: plugin exited
2020/12/02 15:08:54 [TRACE] terraform.NewContext: complete
2020/12/02 15:08:54 [TRACE] backend/local: finished building terraform.Context
2020/12/02 15:08:54 [TRACE] backend/local: requesting interactive input, if necessary
2020/12/02 15:08:54 [TRACE] Context.Input: Prompting for provider arguments
2020/12/02 15:08:54 [TRACE] Context.Input: Provider provider.aws declared at main.tf:1,1-15
2020/12/02 15:08:54 [TRACE] Context.Input: Input for provider.aws: map[string]cty.Value{}
2020/12/02 15:08:54 [TRACE] backend/local: running validation operation
2020/12/02 15:08:54 [INFO] terraform: building graph: GraphTypeValidate
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/12/02 15:08:54 [TRACE] ConfigTransformer: Starting for path: 
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
  aws_iam_user.userx - *terraform.NodeValidatableResource
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
  aws_instance.example - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
  ------
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.StateTransformer
2020/12/02 15:08:54 [TRACE] StateTransformer: state is empty, so nothing to do
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching to "aws_db_instance.default" (*terraform.NodeValidatableResource) config from main.tf:34,1-37
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_db_instance.default
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user.userx" (*terraform.NodeValidatableResource) config from main.tf:47,1-32
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_user.userx
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_access_key.userx" (*terraform.NodeValidatableResource) config from main.tf:55,1-38
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_access_key.userx
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user_policy.userx_policy" (*terraform.NodeValidatableResource) config from main.tf:59,1-46
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_user_policy.userx_policy
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.policy_test" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:66, Column:1, Byte:1647}, End:hcl.Pos{Line:66, Column:45, Byte:1691}}
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_iam_policy_document.policy_test
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.example" (*terraform.NodeValidatableResource) config from main.tf:6,1-34
2020/12/02 15:08:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.example
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
  aws_iam_user.userx - *terraform.NodeValidatableResource
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
  aws_instance.example - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/12/02 15:08:54 [TRACE] MissingProviderTransformer: added implicit provisioner local-exec, first implied by aws_instance.example
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
  aws_iam_user.userx - *terraform.NodeValidatableResource
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
  aws_instance.example - *terraform.NodeValidatableResource
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/12/02 15:08:54 [TRACE] ProvisionerTransformer: aws_instance.example is provisioned by local-exec ("provisioner.local-exec")
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
  aws_iam_user.userx - *terraform.NodeValidatableResource
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
  aws_instance.example - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/12/02 15:08:54 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/12/02 15:08:54 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/aws\"]" provider configuration from main.tf:1,1-15
2020/12/02 15:08:54 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
  aws_iam_user.userx - *terraform.NodeValidatableResource
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
  aws_instance.example - *terraform.NodeValidatableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/12/02 15:08:54 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/12/02 15:08:54 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/12/02 15:08:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_access_key.userx
2020/12/02 15:08:54 [DEBUG] ProviderTransformer: "aws_iam_access_key.userx" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_user_policy.userx_policy
2020/12/02 15:08:54 [DEBUG] ProviderTransformer: "aws_iam_user_policy.userx_policy" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_iam_policy_document.policy_test
2020/12/02 15:08:54 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.policy_test" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.example
2020/12/02 15:08:54 [DEBUG] ProviderTransformer: "aws_instance.example" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_user.userx
2020/12/02 15:08:54 [DEBUG] ProviderTransformer: "aws_iam_user.userx" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_db_instance.default
2020/12/02 15:08:54 [DEBUG] ProviderTransformer: "aws_db_instance.default" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:54 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/12/02 15:08:54 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/12/02 15:08:54 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/12/02 15:08:54 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/12/02 15:08:54 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:54 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_db_instance.default
2020/12/02 15:08:54 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user.userx
2020/12/02 15:08:54 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user_policy.userx_policy
2020/12/02 15:08:54 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.policy_test
2020/12/02 15:08:54 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.example
2020/12/02 15:08:54 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.example
2020/12/02 15:08:54 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_access_key.userx
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "var.region" references: []
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "var.ami_small" references: []
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "aws_instance.example" references: [var.instance_small var.ami_small]
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "aws_iam_access_key.userx" references: [aws_iam_user.userx]
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.userx_policy" references: [data.aws_iam_policy_document.policy_test aws_iam_user.userx]
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.policy_test" references: [aws_instance.example]
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/aws\"]" references: [var.region]
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "aws_db_instance.default" references: []
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "aws_iam_user.userx" references: []
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "var.instance_small" references: []
2020/12/02 15:08:54 [DEBUG] ReferenceTransformer: "provisioner.local-exec" references: []
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2020/12/02 15:08:54 [TRACE] attachDataDependenciesTransformer: data.aws_iam_policy_document.policy_test depends on []
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default - *terraform.NodeValidatableResource
    aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default - *terraform.NodeValidatableResource
    aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default - *terraform.NodeValidatableResource
    aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default - *terraform.NodeValidatableResource
    aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default - *terraform.NodeValidatableResource
    aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.example - *terraform.NodeValidatableResource
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default - *terraform.NodeValidatableResource
    aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default - *terraform.NodeValidatableResource
    aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.example - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/12/02 15:08:54 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_db_instance.default - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
  aws_iam_user.userx - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
    aws_iam_user.userx - *terraform.NodeValidatableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
  aws_instance.example - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test - *terraform.NodeValidatableResource
    aws_instance.example - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default - *terraform.NodeValidatableResource
    aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default - *terraform.NodeValidatableResource
    aws_iam_access_key.userx - *terraform.NodeValidatableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeValidatableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.example - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:54 [DEBUG] Starting graph walk: walkValidate
2020/12/02 15:08:54 [TRACE] dag/walk: visiting "var.instance_small"
2020/12/02 15:08:54 [TRACE] dag/walk: visiting "provisioner.local-exec"
2020/12/02 15:08:54 [TRACE] vertex "var.instance_small": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:08:54 [TRACE] vertex "provisioner.local-exec": starting visit (*terraform.NodeProvisioner)
2020/12/02 15:08:54 [TRACE] vertex "var.instance_small": evaluating
2020/12/02 15:08:54 [TRACE] dag/walk: visiting "var.ami_small"
2020/12/02 15:08:54 [TRACE] [walkValidate] Entering eval tree: var.instance_small
2020/12/02 15:08:54 [TRACE] vertex "var.ami_small": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:08:54 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:54 [TRACE] vertex "provisioner.local-exec": evaluating
2020/12/02 15:08:54 [TRACE] [walkValidate] Exiting eval tree: var.instance_small
2020/12/02 15:08:54 [TRACE] [walkValidate] Entering eval tree: provisioner.local-exec
2020/12/02 15:08:54 [TRACE] eval: *terraform.EvalInitProvisioner
2020/12/02 15:08:54 [TRACE] vertex "var.instance_small": visit complete
2020/12/02 15:08:54 [TRACE] vertex "var.ami_small": evaluating
2020/12/02 15:08:54 [TRACE] [walkValidate] Entering eval tree: var.ami_small
2020/12/02 15:08:54 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:54 [TRACE] [walkValidate] Exiting eval tree: var.ami_small
2020/12/02 15:08:54 [TRACE] dag/walk: visiting "var.region"
2020/12/02 15:08:54 [TRACE] vertex "var.ami_small": visit complete
2020/12/02 15:08:54 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:08:54 [TRACE] vertex "var.region": evaluating
2020/12/02 15:08:54 [TRACE] [walkValidate] Entering eval tree: var.region
2020/12/02 15:08:54 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:54 [TRACE] [walkValidate] Exiting eval tree: var.region
2020/12/02 15:08:54 [TRACE] vertex "var.region": visit complete
2020/12/02 15:08:54 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"]"
2020/12/02 15:08:54 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": starting visit (*terraform.NodeApplyableProvider)
2020/12/02 15:08:54 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": evaluating
2020/12/02 15:08:54 [TRACE] [walkValidate] Entering eval tree: provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:54 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:54 [TRACE] eval: *terraform.EvalInitProvider
2020-12-02T15:08:54.953-0500 [DEBUG] plugin: starting plugin: path=C:\Terraform\terraform.exe args=[C:\Terraform\terraform.exe, internal-plugin, provisioner, local-exec]
2020-12-02T15:08:54.953-0500 [INFO]  plugin: configuring client automatic mTLS
2020-12-02T15:08:54.966-0500 [DEBUG] plugin: plugin started: path=C:\Terraform\terraform.exe pid=42904
2020-12-02T15:08:54.966-0500 [DEBUG] plugin: waiting for RPC address: path=C:\Terraform\terraform.exe
2020-12-02T15:08:54.988-0500 [DEBUG] plugin: starting plugin: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe args=[.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe]
2020-12-02T15:08:55.015-0500 [DEBUG] plugin: plugin started: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe pid=40628
2020-12-02T15:08:55.015-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe
2020-12-02T15:08:55.203-0500 [DEBUG] plugin: using plugin: version=5
2020-12-02T15:08:55.203-0500 [TRACE] plugin.stdio: waiting for stdio data
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: provisioner.local-exec
2020/12/02 15:08:55 [TRACE] vertex "provisioner.local-exec": visit complete
2020-12-02T15:08:55.205-0500 [INFO]  plugin.terraform-provider-aws_v3.19.0_x5.exe: configuring server automatic mTLS: timestamp=2020-12-02T15:08:55.091-0500
2020-12-02T15:08:55.247-0500 [DEBUG] plugin: using plugin: version=5
2020-12-02T15:08:55.247-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2020-12-02T15:08:55.247-0500
2020/12/02 15:08:55 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/aws\"]" provider for provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalOpFilter
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalGetProvider
2020-12-02T15:08:55.317-0500 [TRACE] plugin.stdio: waiting for stdio data
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalValidateProvider
2020/12/02 15:08:55 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/aws"]: using explicit config only
2020/12/02 15:08:55 [TRACE] GRPCProvider: GetSchema
2020/12/02 15:08:55 [TRACE] GRPCProvider: PrepareProviderConfig
2020/12/02 15:08:55 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:08:55 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:08:55 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:55 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": visit complete
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "aws_db_instance.default"
2020/12/02 15:08:55 [TRACE] vertex "aws_db_instance.default": starting visit (*terraform.NodeValidatableResource)
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "aws_iam_user.userx"
2020/12/02 15:08:55 [TRACE] vertex "aws_db_instance.default": evaluating
2020/12/02 15:08:55 [TRACE] vertex "aws_iam_user.userx": starting visit (*terraform.NodeValidatableResource)
2020/12/02 15:08:55 [TRACE] [walkValidate] Entering eval tree: aws_db_instance.default
2020/12/02 15:08:55 [TRACE] vertex "aws_iam_user.userx": evaluating
2020/12/02 15:08:55 [TRACE] [walkValidate] Entering eval tree: aws_iam_user.userx
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "aws_instance.example"
2020/12/02 15:08:55 [TRACE] vertex "aws_instance.example": starting visit (*terraform.NodeValidatableResource)
2020/12/02 15:08:55 [TRACE] vertex "aws_instance.example": evaluating
2020/12/02 15:08:55 [TRACE] [walkValidate] Entering eval tree: aws_instance.example
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalValidateResource
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalValidateResource
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalValidateResource
2020/12/02 15:08:55 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:08:55 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:08:55 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: aws_iam_user.userx
2020/12/02 15:08:55 [TRACE] vertex "aws_iam_user.userx": visit complete
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "aws_iam_access_key.userx"
2020/12/02 15:08:55 [TRACE] vertex "aws_iam_access_key.userx": starting visit (*terraform.NodeValidatableResource)
2020/12/02 15:08:55 [TRACE] vertex "aws_iam_access_key.userx": evaluating
2020/12/02 15:08:55 [TRACE] [walkValidate] Entering eval tree: aws_iam_access_key.userx
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalValidateResource
2020/12/02 15:08:55 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalGetProvisioner
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalValidateProvisioner
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: aws_db_instance.default
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: aws_iam_access_key.userx
2020/12/02 15:08:55 [TRACE] vertex "aws_iam_access_key.userx": visit complete
2020/12/02 15:08:55 [TRACE] vertex "aws_db_instance.default": visit complete
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: aws_instance.example
2020/12/02 15:08:55 [TRACE] vertex "aws_instance.example": visit complete
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.policy_test"
2020/12/02 15:08:55 [TRACE] vertex "data.aws_iam_policy_document.policy_test": starting visit (*terraform.NodeValidatableResource)
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "provisioner.local-exec (close)"
2020/12/02 15:08:55 [TRACE] vertex "data.aws_iam_policy_document.policy_test": evaluating
2020/12/02 15:08:55 [TRACE] vertex "provisioner.local-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2020/12/02 15:08:55 [TRACE] [walkValidate] Entering eval tree: data.aws_iam_policy_document.policy_test
2020/12/02 15:08:55 [TRACE] vertex "provisioner.local-exec (close)": evaluating
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] [walkValidate] Entering eval tree: provisioner.local-exec (close)
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalCloseProvisioner
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalValidateResource
2020/12/02 15:08:55 [TRACE] GRPCProvider: ValidateDataSourceConfig
2020-12-02T15:08:55.580-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: data.aws_iam_policy_document.policy_test
2020/12/02 15:08:55 [TRACE] vertex "data.aws_iam_policy_document.policy_test": visit complete
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "aws_iam_user_policy.userx_policy"
2020/12/02 15:08:55 [TRACE] vertex "aws_iam_user_policy.userx_policy": starting visit (*terraform.NodeValidatableResource)
2020/12/02 15:08:55 [TRACE] vertex "aws_iam_user_policy.userx_policy": evaluating
2020/12/02 15:08:55 [TRACE] [walkValidate] Entering eval tree: aws_iam_user_policy.userx_policy
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalValidateResource
2020/12/02 15:08:55 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: aws_iam_user_policy.userx_policy
2020/12/02 15:08:55 [TRACE] vertex "aws_iam_user_policy.userx_policy": visit complete
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/12/02 15:08:55 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
2020/12/02 15:08:55 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/12/02 15:08:55 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/12/02 15:08:55 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/12/02 15:08:55 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/12/02 15:08:55 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": evaluating
2020/12/02 15:08:55 [TRACE] [walkValidate] Entering eval tree: provider["registry.terraform.io/hashicorp/aws"] (close)
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalCloseProvider
2020/12/02 15:08:55 [TRACE] GRPCProvider: Close
2020-12-02T15:08:55.583-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-12-02T15:08:55.607-0500 [DEBUG] plugin: plugin process exited: path=C:\Terraform\terraform.exe pid=42904
2020-12-02T15:08:55.607-0500 [DEBUG] plugin: plugin exited
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: provisioner.local-exec (close)
2020/12/02 15:08:55 [TRACE] vertex "provisioner.local-exec (close)": visit complete
2020-12-02T15:08:55.610-0500 [DEBUG] plugin: plugin process exited: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe pid=40628
2020-12-02T15:08:55.610-0500 [DEBUG] plugin: plugin exited
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: provider["registry.terraform.io/hashicorp/aws"] (close)
2020/12/02 15:08:55 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": visit complete
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "root"
2020/12/02 15:08:55 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2020/12/02 15:08:55 [TRACE] vertex "root": evaluating
2020/12/02 15:08:55 [TRACE] [walkValidate] Entering eval tree: root
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:08:55 [TRACE] [walkValidate] Exiting eval tree: root
2020/12/02 15:08:55 [TRACE] vertex "root": visit complete
2020/12/02 15:08:55 [INFO] backend/local: apply calling Refresh
2020/12/02 15:08:55 [INFO] terraform: building graph: GraphTypeRefresh
2020/12/02 15:08:55 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/12/02 15:08:55 [TRACE] ConfigTransformer: Starting for path: 
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
  ------
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.StateTransformer
2020/12/02 15:08:55 [TRACE] StateTransformer: state is empty, so nothing to do
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/12/02 15:08:55 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.policy_test (expand)" (*terraform.nodeExpandRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:66, Column:1, Byte:1647}, End:hcl.Pos{Line:66, Column:45, Byte:1691}}
2020/12/02 15:08:55 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_iam_policy_document.policy_test (expand)
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/12/02 15:08:55 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/12/02 15:08:55 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/aws\"]" provider configuration from main.tf:1,1-15
2020/12/02 15:08:55 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:55 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/12/02 15:08:55 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/12/02 15:08:55 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/12/02 15:08:55 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_iam_policy_document.policy_test (expand)
2020/12/02 15:08:55 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.policy_test (expand)" (*terraform.nodeExpandRefreshableDataResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:55 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:55 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/12/02 15:08:55 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/12/02 15:08:55 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/12/02 15:08:55 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/12/02 15:08:55 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.policy_test (expand)
2020/12/02 15:08:55 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:08:55 [DEBUG] ReferenceTransformer: "var.ami_small" references: []
2020/12/02 15:08:55 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/aws\"]" references: [var.region]
2020/12/02 15:08:55 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.policy_test (expand)" references: []
2020/12/02 15:08:55 [DEBUG] ReferenceTransformer: "var.region" references: []
2020/12/02 15:08:55 [DEBUG] ReferenceTransformer: "var.instance_small" references: []
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2020/12/02 15:08:55 [TRACE] attachDataDependenciesTransformer: data.aws_iam_policy_document.policy_test depends on []
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:55 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/12/02 15:08:55 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandRefreshableDataResource
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:55 [DEBUG] Starting graph walk: walkRefresh
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "var.instance_small"
2020/12/02 15:08:55 [TRACE] vertex "var.instance_small": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "var.ami_small"
2020/12/02 15:08:55 [TRACE] vertex "var.instance_small": evaluating
2020/12/02 15:08:55 [TRACE] vertex "var.ami_small": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:08:55 [TRACE] [walkRefresh] Entering eval tree: var.instance_small
2020/12/02 15:08:55 [TRACE] vertex "var.ami_small": evaluating
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] [walkRefresh] Entering eval tree: var.ami_small
2020/12/02 15:08:55 [TRACE] [walkRefresh] Exiting eval tree: var.instance_small
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] [walkRefresh] Exiting eval tree: var.ami_small
2020/12/02 15:08:55 [TRACE] vertex "var.ami_small": visit complete
2020/12/02 15:08:55 [TRACE] vertex "var.instance_small": visit complete
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "var.region"
2020/12/02 15:08:55 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:08:55 [TRACE] vertex "var.region": evaluating
2020/12/02 15:08:55 [TRACE] [walkRefresh] Entering eval tree: var.region
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] [walkRefresh] Exiting eval tree: var.region
2020/12/02 15:08:55 [TRACE] vertex "var.region": visit complete
2020/12/02 15:08:55 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"]"
2020/12/02 15:08:55 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": starting visit (*terraform.NodeApplyableProvider)
2020/12/02 15:08:55 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": evaluating
2020/12/02 15:08:55 [TRACE] [walkRefresh] Entering eval tree: provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalInitProvider
2020-12-02T15:08:55.612-0500 [INFO]  plugin: configuring client automatic mTLS
2020-12-02T15:08:55.651-0500 [DEBUG] plugin: starting plugin: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe args=[.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe]
2020-12-02T15:08:55.675-0500 [DEBUG] plugin: plugin started: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe pid=34268
2020-12-02T15:08:55.675-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe
2020-12-02T15:08:55.849-0500 [INFO]  plugin.terraform-provider-aws_v3.19.0_x5.exe: configuring server automatic mTLS: timestamp=2020-12-02T15:08:55.748-0500
2020-12-02T15:08:55.886-0500 [DEBUG] plugin: using plugin: version=5
2020-12-02T15:08:55.886-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2020-12-02T15:08:55.885-0500
2020/12/02 15:08:55 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/aws\"]" provider for provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:55 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalOpFilter
2020-12-02T15:08:55.953-0500 [TRACE] plugin.stdio: waiting for stdio data
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalOpFilter
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:55 [TRACE] eval: *terraform.EvalConfigProvider
2020/12/02 15:08:55 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/aws"]: using explicit config only
2020/12/02 15:08:55 [TRACE] GRPCProvider: GetSchema
2020/12/02 15:08:56 [TRACE] GRPCProvider: Configure
2020-12-02T15:08:56.050-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:08:56 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2020-12-02T15:08:56.052-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:08:56 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020-12-02T15:08:56.509-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:08:56 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020/12/02 15:08:57 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:08:57 [TRACE] [walkRefresh] Exiting eval tree: provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:57 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": visit complete
2020/12/02 15:08:57 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.policy_test (expand)"
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": starting visit (*terraform.nodeExpandRefreshableDataResource)
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": expanding dynamic subgraph
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": entering dynamic subgraph
2020/12/02 15:08:57 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.policy_test"
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test": starting visit (*terraform.NodeRefreshableDataResource)
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test": expanding dynamic subgraph
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/12/02 15:08:57 [TRACE] ResourceCountTransformer: adding data.aws_iam_policy_document.policy_test as *terraform.NodeRefreshableDataResourceInstance
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_iam_policy_document.policy_test - *terraform.NodeRefreshableDataResourceInstance
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:08:57 [DEBUG] Resource state not found for node "data.aws_iam_policy_document.policy_test", instance data.aws_iam_policy_document.policy_test
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.policy_test" references: []
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.RootTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test": entering dynamic subgraph
2020/12/02 15:08:57 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.policy_test"
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test": evaluating
2020/12/02 15:08:57 [TRACE] [walkRefresh] Entering eval tree: data.aws_iam_policy_document.policy_test
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:08:57 [TRACE] EvalReadState: reading state for data.aws_iam_policy_document.policy_test
2020/12/02 15:08:57 [TRACE] EvalReadState: no state present for data.aws_iam_policy_document.policy_test
2020/12/02 15:08:57 [TRACE] eval: *terraform.evalReadDataRefresh
2020/12/02 15:08:57 [TRACE] evalReadDataRefresh: data.aws_iam_policy_document.policy_test configuration not fully known yet, so deferring to apply phase
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:08:57 [TRACE] EvalWriteDiff: recorded Read change for data.aws_iam_policy_document.policy_test
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:08:57 [TRACE] EvalWriteState: removing state object for data.aws_iam_policy_document.policy_test
2020/12/02 15:08:57 [TRACE] [walkRefresh] Exiting eval tree: data.aws_iam_policy_document.policy_test
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test": visit complete
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test": dynamic subgraph completed successfully
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test": visit complete
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": dynamic subgraph completed successfully
2020/12/02 15:08:57 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": visit complete
2020/12/02 15:08:57 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
2020/12/02 15:08:57 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/12/02 15:08:57 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": evaluating
2020/12/02 15:08:57 [TRACE] [walkRefresh] Entering eval tree: provider["registry.terraform.io/hashicorp/aws"] (close)
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalCloseProvider
2020/12/02 15:08:57 [TRACE] GRPCProvider: Close
2020-12-02T15:08:57.426-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-12-02T15:08:57.450-0500 [DEBUG] plugin: plugin process exited: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe pid=34268
2020-12-02T15:08:57.450-0500 [DEBUG] plugin: plugin exited
2020/12/02 15:08:57 [TRACE] [walkRefresh] Exiting eval tree: provider["registry.terraform.io/hashicorp/aws"] (close)
2020/12/02 15:08:57 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": visit complete
2020/12/02 15:08:57 [TRACE] dag/walk: visiting "root"
2020/12/02 15:08:57 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2020/12/02 15:08:57 [TRACE] vertex "root": evaluating
2020/12/02 15:08:57 [TRACE] [walkRefresh] Entering eval tree: root
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:57 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:08:57 [TRACE] [walkRefresh] Exiting eval tree: root
2020/12/02 15:08:57 [TRACE] vertex "root": visit complete
2020/12/02 15:08:57 [INFO] backend/local: apply calling Plan
2020/12/02 15:08:57 [INFO] terraform: building graph: GraphTypePlan
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/12/02 15:08:57 [TRACE] ConfigTransformer: Starting for path: 
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.StateTransformer
2020/12/02 15:08:57 [TRACE] StateTransformer: state is empty, so nothing to do
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user.userx (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:47,1-32
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_user.userx (expand)
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.policy_test (expand)" (*terraform.nodeExpandPlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:66, Column:1, Byte:1647}, End:hcl.Pos{Line:66, Column:45, Byte:1691}}
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_iam_policy_document.policy_test (expand)
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_access_key.userx (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:55,1-38
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_access_key.userx (expand)
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user_policy.userx_policy (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:59,1-46
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_user_policy.userx_policy (expand)
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.example (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:6,1-34
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.example (expand)
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching to "aws_db_instance.default (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:34,1-37
2020/12/02 15:08:57 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_db_instance.default (expand)
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/12/02 15:08:57 [TRACE] MissingProviderTransformer: added implicit provisioner local-exec, first implied by aws_instance.example (expand)
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/12/02 15:08:57 [TRACE] ProvisionerTransformer: aws_instance.example (expand) is provisioned by local-exec ("provisioner.local-exec")
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/12/02 15:08:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/12/02 15:08:57 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/aws\"]" provider configuration from main.tf:1,1-15
2020/12/02 15:08:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/12/02 15:08:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/12/02 15:08:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/12/02 15:08:57 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_iam_policy_document.policy_test (expand)
2020/12/02 15:08:57 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.policy_test (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:57 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_user_policy.userx_policy (expand)
2020/12/02 15:08:57 [DEBUG] ProviderTransformer: "aws_iam_user_policy.userx_policy (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:57 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.example (expand)
2020/12/02 15:08:57 [DEBUG] ProviderTransformer: "aws_instance.example (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:57 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_db_instance.default (expand)
2020/12/02 15:08:57 [DEBUG] ProviderTransformer: "aws_db_instance.default (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:57 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_access_key.userx (expand)
2020/12/02 15:08:57 [DEBUG] ProviderTransformer: "aws_iam_access_key.userx (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:57 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_user.userx (expand)
2020/12/02 15:08:57 [DEBUG] ProviderTransformer: "aws_iam_user.userx (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/12/02 15:08:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/12/02 15:08:57 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/12/02 15:08:57 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/12/02 15:08:57 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user_policy.userx_policy (expand)
2020/12/02 15:08:57 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.example (expand)
2020/12/02 15:08:57 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.example (expand)
2020/12/02 15:08:57 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_db_instance.default (expand)
2020/12/02 15:08:57 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.policy_test (expand)
2020/12/02 15:08:57 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_access_key.userx (expand)
2020/12/02 15:08:57 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user.userx (expand)
2020/12/02 15:08:57 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "aws_iam_access_key.userx (expand)" references: [aws_iam_user.userx (expand)]
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "aws_iam_user.userx (expand)" references: []
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/aws\"]" references: [var.region]
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "var.instance_small" references: []
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "var.ami_small" references: []
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "provisioner.local-exec" references: []
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.userx_policy (expand)" references: [aws_iam_user.userx (expand) data.aws_iam_policy_document.policy_test (expand)]
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "aws_instance.example (expand)" references: [var.instance_small var.ami_small]
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "aws_db_instance.default (expand)" references: []
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.policy_test (expand)" references: [aws_instance.example (expand)]
2020/12/02 15:08:57 [DEBUG] ReferenceTransformer: "var.region" references: []
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2020/12/02 15:08:57 [TRACE] attachDataDependenciesTransformer: data.aws_iam_policy_document.policy_test depends on []
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/12/02 15:08:57 [TRACE] ForcedCBDTransformer: "aws_iam_user_policy.userx_policy (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2020/12/02 15:08:57 [TRACE] ForcedCBDTransformer: "aws_instance.example (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2020/12/02 15:08:57 [TRACE] ForcedCBDTransformer: "aws_db_instance.default (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2020/12/02 15:08:57 [TRACE] ForcedCBDTransformer: "data.aws_iam_policy_document.policy_test (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2020/12/02 15:08:57 [TRACE] ForcedCBDTransformer: "aws_iam_access_key.userx (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2020/12/02 15:08:57 [TRACE] ForcedCBDTransformer: "aws_iam_user.userx (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/12/02 15:08:57 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user.userx (expand) - *terraform.nodeExpandPlannableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandPlannableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.example (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:08:57 [DEBUG] Starting graph walk: walkPlan
2020/12/02 15:08:57 [TRACE] dag/walk: visiting "provisioner.local-exec"
2020/12/02 15:08:57 [TRACE] vertex "provisioner.local-exec": starting visit (*terraform.NodeProvisioner)
2020/12/02 15:08:57 [TRACE] vertex "provisioner.local-exec": evaluating
2020/12/02 15:08:57 [TRACE] [walkPlan] Entering eval tree: provisioner.local-exec
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalInitProvisioner
2020/12/02 15:08:57 [TRACE] dag/walk: visiting "var.ami_small"
2020/12/02 15:08:57 [TRACE] dag/walk: visiting "var.instance_small"
2020/12/02 15:08:57 [TRACE] vertex "var.ami_small": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:08:57 [TRACE] vertex "var.instance_small": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:08:57 [TRACE] vertex "var.ami_small": evaluating
2020/12/02 15:08:57 [TRACE] vertex "var.instance_small": evaluating
2020/12/02 15:08:57 [TRACE] [walkPlan] Entering eval tree: var.ami_small
2020/12/02 15:08:57 [TRACE] [walkPlan] Entering eval tree: var.instance_small
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:57 [TRACE] [walkPlan] Exiting eval tree: var.ami_small
2020/12/02 15:08:57 [TRACE] [walkPlan] Exiting eval tree: var.instance_small
2020/12/02 15:08:57 [TRACE] vertex "var.ami_small": visit complete
2020/12/02 15:08:57 [TRACE] vertex "var.instance_small": visit complete
2020/12/02 15:08:57 [TRACE] dag/walk: visiting "var.region"
2020/12/02 15:08:57 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:08:57 [TRACE] vertex "var.region": evaluating
2020/12/02 15:08:57 [TRACE] [walkPlan] Entering eval tree: var.region
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:57 [TRACE] [walkPlan] Exiting eval tree: var.region
2020/12/02 15:08:57 [TRACE] vertex "var.region": visit complete
2020/12/02 15:08:57 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"]"
2020/12/02 15:08:57 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": starting visit (*terraform.NodeApplyableProvider)
2020/12/02 15:08:57 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": evaluating
2020/12/02 15:08:57 [TRACE] [walkPlan] Entering eval tree: provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalInitProvider
2020-12-02T15:08:57.453-0500 [DEBUG] plugin: starting plugin: path=C:\Terraform\terraform.exe args=[C:\Terraform\terraform.exe, internal-plugin, provisioner, local-exec]
2020-12-02T15:08:57.453-0500 [INFO]  plugin: configuring client automatic mTLS
2020-12-02T15:08:57.466-0500 [DEBUG] plugin: plugin started: path=C:\Terraform\terraform.exe pid=38328
2020-12-02T15:08:57.466-0500 [DEBUG] plugin: waiting for RPC address: path=C:\Terraform\terraform.exe
2020-12-02T15:08:57.488-0500 [DEBUG] plugin: starting plugin: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe args=[.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe]
2020-12-02T15:08:57.513-0500 [DEBUG] plugin: plugin started: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe pid=6724
2020-12-02T15:08:57.513-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe
2020-12-02T15:08:57.755-0500 [INFO]  plugin.terraform-provider-aws_v3.19.0_x5.exe: configuring server automatic mTLS: timestamp=2020-12-02T15:08:57.617-0500
2020-12-02T15:08:57.761-0500 [DEBUG] plugin: using plugin: version=5
2020/12/02 15:08:57 [TRACE] [walkPlan] Exiting eval tree: provisioner.local-exec
2020/12/02 15:08:57 [TRACE] vertex "provisioner.local-exec": visit complete
2020-12-02T15:08:57.762-0500 [TRACE] plugin.stdio: waiting for stdio data
2020-12-02T15:08:57.809-0500 [DEBUG] plugin: using plugin: version=5
2020-12-02T15:08:57.810-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2020-12-02T15:08:57.809-0500
2020/12/02 15:08:57 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/aws\"]" provider for provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:57 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalOpFilter
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalOpFilter
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:57 [TRACE] eval: *terraform.EvalConfigProvider
2020/12/02 15:08:57 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/aws"]: using explicit config only
2020/12/02 15:08:57 [TRACE] GRPCProvider: GetSchema
2020-12-02T15:08:57.911-0500 [TRACE] plugin.stdio: waiting for stdio data
2020/12/02 15:08:58 [TRACE] GRPCProvider: Configure
2020-12-02T15:08:58.030-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:08:58 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2020-12-02T15:08:58.032-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:08:58 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020-12-02T15:08:58.532-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:08:58 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020/12/02 15:08:59 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:08:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": visit complete
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_iam_user.userx (expand)"
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_instance.example (expand)"
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_db_instance.default (expand)"
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example (expand)": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example (expand)": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_instance.example"
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default (expand)": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default (expand)": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_db_instance.default"
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default": starting visit (*terraform.NodePlannableResource)
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: aws_db_instance.default
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example": starting visit (*terraform.NodePlannableResource)
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: aws_instance.example
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: aws_db_instance.default
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx (expand)": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: aws_instance.example
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx (expand)": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/12/02 15:08:59 [TRACE] ResourceCountTransformer: adding aws_db_instance.default as *terraform.NodePlannableResourceInstance
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_iam_user.userx"
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx": starting visit (*terraform.NodePlannableResource)
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_db_instance.default - *terraform.NodePlannableResourceInstance
  ------
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx": evaluating
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: aws_iam_user.userx
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:08:59 [DEBUG] Resource instance state not found for node "aws_db_instance.default", instance aws_db_instance.default
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:08:59 [DEBUG] ReferenceTransformer: "aws_db_instance.default" references: []
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.RootTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_db_instance.default"
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default": starting visit (*terraform.NodePlannableResourceInstance)
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: aws_db_instance.default
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: aws_iam_user.userx
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:59 [TRACE] ResourceCountTransformer: adding aws_instance.example as *terraform.NodePlannableResourceInstance
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.example - *terraform.NodePlannableResourceInstance
  ------
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:08:59 [DEBUG] Resource instance state not found for node "aws_instance.example", instance aws_instance.example
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:08:59 [TRACE] EvalReadState: reading state for aws_db_instance.default
2020/12/02 15:08:59 [WARN] ReferenceTransformer: reference not found: "var.instance_small"
2020/12/02 15:08:59 [WARN] ReferenceTransformer: reference not found: "var.ami_small"
2020/12/02 15:08:59 [DEBUG] ReferenceTransformer: "aws_instance.example" references: []
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.RootTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] EvalReadState: no state present for aws_db_instance.default
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_instance.example"
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalValidateSelfRef
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example": starting visit (*terraform.NodePlannableResourceInstance)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: aws_instance.example
2020/12/02 15:08:59 [TRACE] ResourceCountTransformer: adding aws_iam_user.userx as *terraform.NodePlannableResourceInstance
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_user.userx - *terraform.NodePlannableResourceInstance
  ------
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalDiff
2020/12/02 15:08:59 [DEBUG] Resource instance state not found for node "aws_iam_user.userx", instance aws_iam_user.userx
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:08:59 [TRACE] EvalReadState: reading state for aws_instance.example
2020/12/02 15:08:59 [DEBUG] ReferenceTransformer: "aws_iam_user.userx" references: []
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.RootTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_iam_user.userx"
2020/12/02 15:08:59 [TRACE] EvalReadState: no state present for aws_instance.example
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx": starting visit (*terraform.NodePlannableResourceInstance)
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalValidateSelfRef
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: aws_iam_user.userx
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalDiff
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:08:59 [TRACE] EvalReadState: reading state for aws_iam_user.userx
2020/12/02 15:08:59 [TRACE] EvalReadState: no state present for aws_iam_user.userx
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalValidateSelfRef
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalDiff
2020/12/02 15:08:59 [TRACE] Re-validating config for "aws_iam_user.userx"
2020/12/02 15:08:59 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:08:59 [TRACE] Re-validating config for "aws_db_instance.default"
2020/12/02 15:08:59 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:08:59 [TRACE] Re-validating config for "aws_instance.example"
2020/12/02 15:08:59 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:08:59 [TRACE] GRPCProvider: PlanResourceChange
2020/12/02 15:08:59 [TRACE] GRPCProvider: PlanResourceChange
2020/12/02 15:08:59 [TRACE] GRPCProvider: PlanResourceChange
2020/12/02 15:08:59 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.userx, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalCheckPreventDestroy
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:08:59 [TRACE] EvalWriteState: writing current state object for aws_iam_user.userx
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:08:59 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_user.userx
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: aws_iam_user.userx
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx": visit complete
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx": visit complete
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx (expand)": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user.userx (expand)": visit complete
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_iam_access_key.userx (expand)"
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx (expand)": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx (expand)": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_iam_access_key.userx"
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx": starting visit (*terraform.NodePlannableResource)
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: aws_iam_access_key.userx
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: aws_iam_access_key.userx
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/12/02 15:08:59 [TRACE] ResourceCountTransformer: adding aws_iam_access_key.userx as *terraform.NodePlannableResourceInstance
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_access_key.userx - *terraform.NodePlannableResourceInstance
  ------
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:08:59 [DEBUG] Resource instance state not found for node "aws_iam_access_key.userx", instance aws_iam_access_key.userx
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:08:59 [DEBUG] ReferenceTransformer: "aws_iam_access_key.userx" references: []
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.RootTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_iam_access_key.userx"
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx": starting visit (*terraform.NodePlannableResourceInstance)
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: aws_iam_access_key.userx
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:08:59 [TRACE] EvalReadState: reading state for aws_iam_access_key.userx
2020/12/02 15:08:59 [TRACE] EvalReadState: no state present for aws_iam_access_key.userx
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalValidateSelfRef
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalDiff
2020/12/02 15:08:59 [TRACE] Re-validating config for "aws_iam_access_key.userx"
2020/12/02 15:08:59 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:08:59 [TRACE] GRPCProvider: PlanResourceChange
2020/12/02 15:08:59 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.example, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalCheckPreventDestroy
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:08:59 [TRACE] EvalWriteState: writing current state object for aws_instance.example
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:08:59 [TRACE] EvalWriteDiff: recorded Create change for aws_instance.example
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: aws_instance.example
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example": visit complete
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example": visit complete
2020/12/02 15:08:59 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_db_instance.default, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .delete_automated_backups: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .copy_tags_to_snapshot: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .monitoring_interval: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .publicly_accessible: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .performance_insights_enabled: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .auto_minor_version_upgrade: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalCheckPreventDestroy
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalCheckPreventDestroy
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example (expand)": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:08:59 [TRACE] EvalWriteState: writing current state object for aws_db_instance.default
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:08:59 [TRACE] EvalWriteState: writing current state object for aws_iam_access_key.userx
2020/12/02 15:08:59 [TRACE] vertex "aws_instance.example (expand)": visit complete
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "provisioner.local-exec (close)"
2020/12/02 15:08:59 [TRACE] vertex "provisioner.local-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2020/12/02 15:08:59 [TRACE] vertex "provisioner.local-exec (close)": evaluating
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.policy_test (expand)"
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_access_key.userx
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: aws_iam_access_key.userx
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx": visit complete
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.policy_test"
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test": starting visit (*terraform.NodePlannableResource)
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test": evaluating
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx": visit complete
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: data.aws_iam_policy_document.policy_test
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx (expand)": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_access_key.userx (expand)": visit complete
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: provisioner.local-exec (close)
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalCloseProvisioner
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: data.aws_iam_policy_document.policy_test
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/12/02 15:08:59 [TRACE] ResourceCountTransformer: adding data.aws_iam_policy_document.policy_test as *terraform.NodePlannableResourceInstance
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_iam_policy_document.policy_test - *terraform.NodePlannableResourceInstance
  ------
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:08:59 [DEBUG] Resource instance state not found for node "data.aws_iam_policy_document.policy_test", instance data.aws_iam_policy_document.policy_test
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:08:59 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.policy_test" references: []
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.RootTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.policy_test"
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test": starting visit (*terraform.NodePlannableResourceInstance)
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: data.aws_iam_policy_document.policy_test
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:08:59 [TRACE] EvalReadState: reading state for data.aws_iam_policy_document.policy_test
2020/12/02 15:08:59 [TRACE] EvalReadState: no state present for data.aws_iam_policy_document.policy_test
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalValidateSelfRef
2020/12/02 15:08:59 [TRACE] eval: *terraform.evalReadDataPlan
2020/12/02 15:08:59 [TRACE] EvalWriteDiff: recorded Create change for aws_db_instance.default
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: aws_db_instance.default
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default": visit complete
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default": visit complete
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default (expand)": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] vertex "aws_db_instance.default (expand)": visit complete
2020-12-02T15:08:59.335-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020/12/02 15:08:59 [TRACE] evalReadDataPlan: data.aws_iam_policy_document.policy_test configuration not fully known yet, so deferring to apply phase
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:08:59 [TRACE] EvalWriteState: writing current state object for data.aws_iam_policy_document.policy_test
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:08:59 [TRACE] EvalWriteDiff: recorded Read change for data.aws_iam_policy_document.policy_test
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: data.aws_iam_policy_document.policy_test
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test": visit complete
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test": visit complete
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": visit complete
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_iam_user_policy.userx_policy (expand)"
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy (expand)": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy (expand)": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_iam_user_policy.userx_policy"
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy": starting visit (*terraform.NodePlannableResource)
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: aws_iam_user_policy.userx_policy
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: aws_iam_user_policy.userx_policy
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy": expanding dynamic subgraph
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/12/02 15:08:59 [TRACE] ResourceCountTransformer: adding aws_iam_user_policy.userx_policy as *terraform.NodePlannableResourceInstance
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_user_policy.userx_policy - *terraform.NodePlannableResourceInstance
  ------
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:08:59 [DEBUG] Resource instance state not found for node "aws_iam_user_policy.userx_policy", instance aws_iam_user_policy.userx_policy
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:08:59 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.userx_policy" references: []
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/12/02 15:08:59 [TRACE] Executing graph transform *terraform.RootTransformer
2020/12/02 15:08:59 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy": entering dynamic subgraph
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "aws_iam_user_policy.userx_policy"
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy": starting visit (*terraform.NodePlannableResourceInstance)
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: aws_iam_user_policy.userx_policy
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:08:59 [TRACE] EvalReadState: reading state for aws_iam_user_policy.userx_policy
2020/12/02 15:08:59 [TRACE] EvalReadState: no state present for aws_iam_user_policy.userx_policy
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalValidateSelfRef
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalDiff
2020/12/02 15:08:59 [TRACE] Re-validating config for "aws_iam_user_policy.userx_policy"
2020/12/02 15:08:59 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:08:59 [TRACE] GRPCProvider: PlanResourceChange
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalCheckPreventDestroy
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:08:59 [TRACE] EvalWriteState: writing current state object for aws_iam_user_policy.userx_policy
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:08:59 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_user_policy.userx_policy
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: aws_iam_user_policy.userx_policy
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy": visit complete
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy": visit complete
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy (expand)": dynamic subgraph completed successfully
2020/12/02 15:08:59 [TRACE] vertex "aws_iam_user_policy.userx_policy (expand)": visit complete
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/12/02 15:08:59 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/12/02 15:08:59 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
2020/12/02 15:08:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/12/02 15:08:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": evaluating
2020/12/02 15:08:59 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: provider["registry.terraform.io/hashicorp/aws"] (close)
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalCloseProvider
2020/12/02 15:08:59 [TRACE] GRPCProvider: Close
2020-12-02T15:08:59.338-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-12-02T15:08:59.358-0500 [DEBUG] plugin: plugin process exited: path=C:\Terraform\terraform.exe pid=38328
2020-12-02T15:08:59.358-0500 [DEBUG] plugin: plugin exited
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: provisioner.local-exec (close)
2020/12/02 15:08:59 [TRACE] vertex "provisioner.local-exec (close)": visit complete
2020-12-02T15:08:59.364-0500 [DEBUG] plugin: plugin process exited: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe pid=6724
2020-12-02T15:08:59.364-0500 [DEBUG] plugin: plugin exited
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: provider["registry.terraform.io/hashicorp/aws"] (close)
2020/12/02 15:08:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": visit complete
2020/12/02 15:08:59 [TRACE] dag/walk: visiting "root"
2020/12/02 15:08:59 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2020/12/02 15:08:59 [TRACE] vertex "root": evaluating
2020/12/02 15:08:59 [TRACE] [walkPlan] Entering eval tree: root
2020/12/02 15:08:59 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:08:59 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:08:59 [TRACE] [walkPlan] Exiting eval tree: root
2020/12/02 15:08:59 [TRACE] vertex "root": visit complete
2020/12/02 15:08:59 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/12/02 15:10:43 [INFO] backend/local: apply calling Apply
2020/12/02 15:10:43 [INFO] terraform: building graph: GraphTypeApply
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/12/02 15:10:43 [TRACE] ConfigTransformer: Starting for path: 
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/12/02 15:10:43 [TRACE] DiffTransformer starting
2020/12/02 15:10:43 [TRACE] DiffTransformer: found Create change for aws_iam_user.userx 
2020/12/02 15:10:43 [TRACE] DiffTransformer: aws_iam_user.userx will be represented by aws_iam_user.userx
2020/12/02 15:10:43 [TRACE] DiffTransformer: found Create change for aws_instance.example 
2020/12/02 15:10:43 [TRACE] DiffTransformer: aws_instance.example will be represented by aws_instance.example
2020/12/02 15:10:43 [TRACE] DiffTransformer: found Create change for aws_iam_access_key.userx 
2020/12/02 15:10:43 [TRACE] DiffTransformer: aws_iam_access_key.userx will be represented by aws_iam_access_key.userx
2020/12/02 15:10:43 [TRACE] DiffTransformer: found Create change for aws_db_instance.default 
2020/12/02 15:10:43 [TRACE] DiffTransformer: aws_db_instance.default will be represented by aws_db_instance.default
2020/12/02 15:10:43 [TRACE] DiffTransformer: found Read change for data.aws_iam_policy_document.policy_test 
2020/12/02 15:10:43 [TRACE] DiffTransformer: data.aws_iam_policy_document.policy_test will be represented by data.aws_iam_policy_document.policy_test
2020/12/02 15:10:43 [TRACE] DiffTransformer: found Create change for aws_iam_user_policy.userx_policy 
2020/12/02 15:10:43 [TRACE] DiffTransformer: aws_iam_user_policy.userx_policy will be represented by aws_iam_user_policy.userx_policy
2020/12/02 15:10:43 [TRACE] DiffTransformer complete
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.example (expand)" (*terraform.nodeExpandApplyableResource) config from main.tf:6,1-34
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.example (expand)
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_db_instance.default (expand)" (*terraform.nodeExpandApplyableResource) config from main.tf:34,1-37
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_db_instance.default (expand)
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user.userx (expand)" (*terraform.nodeExpandApplyableResource) config from main.tf:47,1-32
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_user.userx (expand)
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user_policy.userx_policy (expand)" (*terraform.nodeExpandApplyableResource) config from main.tf:59,1-46
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_user_policy.userx_policy (expand)
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.example" (*terraform.NodeApplyableResourceInstance) config from main.tf:6,1-34
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.example
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_db_instance.default" (*terraform.NodeApplyableResourceInstance) config from main.tf:34,1-37
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_db_instance.default
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_access_key.userx (expand)" (*terraform.nodeExpandApplyableResource) config from main.tf:55,1-38
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_access_key.userx (expand)
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.policy_test (expand)" (*terraform.nodeExpandApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:66, Column:1, Byte:1647}, End:hcl.Pos{Line:66, Column:45, Byte:1691}}
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_iam_policy_document.policy_test (expand)
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user.userx" (*terraform.NodeApplyableResourceInstance) config from main.tf:47,1-32
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_user.userx
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_access_key.userx" (*terraform.NodeApplyableResourceInstance) config from main.tf:55,1-38
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_access_key.userx
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_iam_policy_document.policy_test" (*terraform.NodeApplyableResourceInstance) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:66, Column:1, Byte:1647}, End:hcl.Pos{Line:66, Column:45, Byte:1691}}
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_iam_policy_document.policy_test
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_user_policy.userx_policy" (*terraform.NodeApplyableResourceInstance) config from main.tf:59,1-46
2020/12/02 15:10:43 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_user_policy.userx_policy
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/12/02 15:10:43 [DEBUG] Resource state not found for node "aws_instance.example", instance aws_instance.example
2020/12/02 15:10:43 [DEBUG] Resource state not found for node "aws_db_instance.default", instance aws_db_instance.default
2020/12/02 15:10:43 [DEBUG] Resource state not found for node "aws_iam_access_key.userx", instance aws_iam_access_key.userx
2020/12/02 15:10:43 [DEBUG] Resource state not found for node "data.aws_iam_policy_document.policy_test", instance data.aws_iam_policy_document.policy_test
2020/12/02 15:10:43 [DEBUG] Resource state not found for node "aws_iam_user_policy.userx_policy", instance aws_iam_user_policy.userx_policy
2020/12/02 15:10:43 [DEBUG] Resource state not found for node "aws_iam_user.userx", instance aws_iam_user.userx
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/12/02 15:10:43 [TRACE] MissingProviderTransformer: added implicit provisioner local-exec, first implied by aws_instance.example (expand)
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/12/02 15:10:43 [TRACE] ProvisionerTransformer: aws_instance.example (expand) is provisioned by local-exec ("provisioner.local-exec")
2020/12/02 15:10:43 [TRACE] ProvisionerTransformer: aws_instance.example is provisioned by local-exec ("provisioner.local-exec")
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/12/02 15:10:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/12/02 15:10:43 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/aws\"]" provider configuration from main.tf:1,1-15
2020/12/02 15:10:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:10:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/12/02 15:10:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/12/02 15:10:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_user.userx
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "aws_iam_user.userx" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_user_policy.userx_policy
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "aws_iam_user_policy.userx_policy" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_access_key.userx (expand)
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "aws_iam_access_key.userx (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_user_policy.userx_policy (expand)
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "aws_iam_user_policy.userx_policy (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.example
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "aws_instance.example" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_db_instance.default
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "aws_db_instance.default" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_iam_policy_document.policy_test (expand)
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.policy_test (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.example (expand)
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "aws_instance.example (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_user.userx (expand)
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "aws_iam_user.userx (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_access_key.userx
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "aws_iam_access_key.userx" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_iam_policy_document.policy_test
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "data.aws_iam_policy_document.policy_test" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_db_instance.default (expand)
2020/12/02 15:10:43 [DEBUG] ProviderTransformer: "aws_db_instance.default (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:10:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/12/02 15:10:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/12/02 15:10:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/12/02 15:10:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_access_key.userx
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.policy_test
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user_policy.userx_policy
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_iam_policy_document.policy_test (expand)
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user.userx
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_db_instance.default (expand)
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_access_key.userx (expand)
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user_policy.userx_policy (expand)
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.example
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.example
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_db_instance.default
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.example (expand)
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching provisioner "local-exec" config schema to aws_instance.example (expand)
2020/12/02 15:10:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_user.userx (expand)
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "aws_db_instance.default (expand)" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/aws\"]" references: [var.region]
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "aws_iam_access_key.userx (expand)" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "var.instance_small" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "aws_db_instance.default" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "aws_instance.example (expand)" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "aws_iam_user.userx (expand)" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.userx_policy (expand)" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "aws_instance.example" references: [var.instance_small var.ami_small]
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "aws_iam_user_policy.userx_policy" references: [data.aws_iam_policy_document.policy_test (expand) data.aws_iam_policy_document.policy_test data.aws_iam_policy_document.policy_test aws_iam_user.userx (expand) aws_iam_user.userx aws_iam_user.userx]
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "provisioner.local-exec" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "var.region" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "var.ami_small" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.policy_test (expand)" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "aws_iam_user.userx" references: []
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "aws_iam_access_key.userx" references: [aws_iam_user.userx (expand) aws_iam_user.userx aws_iam_user.userx]
2020/12/02 15:10:43 [DEBUG] ReferenceTransformer: "data.aws_iam_policy_document.policy_test" references: [aws_instance.example (expand) aws_instance.example aws_instance.example]
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/12/02 15:10:43 [TRACE] AttachDependenciesTransformer: aws_db_instance.default depends on []
2020/12/02 15:10:43 [TRACE] AttachDependenciesTransformer: aws_instance.example depends on []
2020/12/02 15:10:43 [TRACE] AttachDependenciesTransformer: aws_iam_user_policy.userx_policy depends on [aws_iam_user.userx aws_instance.example data.aws_iam_policy_document.policy_test]
2020/12/02 15:10:43 [TRACE] AttachDependenciesTransformer: aws_iam_user.userx depends on []
2020/12/02 15:10:43 [TRACE] AttachDependenciesTransformer: aws_iam_access_key.userx depends on [aws_iam_user.userx]
2020/12/02 15:10:43 [TRACE] AttachDependenciesTransformer: data.aws_iam_policy_document.policy_test depends on [aws_instance.example]
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/12/02 15:10:43 [TRACE] ForcedCBDTransformer: "aws_instance.example" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2020/12/02 15:10:43 [TRACE] ForcedCBDTransformer: "aws_db_instance.default" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2020/12/02 15:10:43 [TRACE] ForcedCBDTransformer: "aws_iam_user.userx" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2020/12/02 15:10:43 [TRACE] ForcedCBDTransformer: "aws_iam_access_key.userx" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2020/12/02 15:10:43 [TRACE] ForcedCBDTransformer: "data.aws_iam_policy_document.policy_test" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2020/12/02 15:10:43 [TRACE] ForcedCBDTransformer: "aws_iam_user_policy.userx_policy" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.destroyRootOutputTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.destroyRootOutputTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.applyDestroyNodeReferenceFixupTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.applyDestroyNodeReferenceFixupTransformer (no changes)
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:10:43 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/12/02 15:10:43 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
  aws_db_instance.default (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
  aws_iam_access_key.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_user.userx (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
    aws_iam_user.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
  aws_iam_user_policy.userx_policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.example - *terraform.NodeApplyableResourceInstance
    aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    var.ami_small - *terraform.NodeRootVariable
    var.instance_small - *terraform.NodeRootVariable
  aws_instance.example (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.local-exec - *terraform.NodeProvisioner
  data.aws_iam_policy_document.policy_test - *terraform.NodeApplyableResourceInstance
    aws_instance.example - *terraform.NodeApplyableResourceInstance
    data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
  data.aws_iam_policy_document.policy_test (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_db_instance.default - *terraform.NodeApplyableResourceInstance
    aws_iam_access_key.userx - *terraform.NodeApplyableResourceInstance
    aws_iam_user_policy.userx_policy - *terraform.NodeApplyableResourceInstance
  provisioner.local-exec - *terraform.NodeProvisioner
  provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.example - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provisioner.local-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ami_small - *terraform.NodeRootVariable
  var.instance_small - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2020/12/02 15:10:43 [DEBUG] Starting graph walk: walkApply
2020/12/02 15:10:43 [TRACE] dag/walk: visiting "var.instance_small"
2020/12/02 15:10:43 [TRACE] vertex "var.instance_small": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:10:43 [TRACE] vertex "var.instance_small": evaluating
2020/12/02 15:10:43 [TRACE] [walkApply] Entering eval tree: var.instance_small
2020/12/02 15:10:43 [TRACE] dag/walk: visiting "var.region"
2020/12/02 15:10:43 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:10:43 [TRACE] vertex "var.region": evaluating
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:10:43 [TRACE] [walkApply] Exiting eval tree: var.instance_small
2020/12/02 15:10:43 [TRACE] vertex "var.instance_small": visit complete
2020/12/02 15:10:43 [TRACE] dag/walk: visiting "var.ami_small"
2020/12/02 15:10:43 [TRACE] vertex "var.ami_small": starting visit (*terraform.NodeRootVariable)
2020/12/02 15:10:43 [TRACE] dag/walk: visiting "provisioner.local-exec"
2020/12/02 15:10:43 [TRACE] vertex "provisioner.local-exec": starting visit (*terraform.NodeProvisioner)
2020/12/02 15:10:43 [TRACE] vertex "provisioner.local-exec": evaluating
2020/12/02 15:10:43 [TRACE] [walkApply] Entering eval tree: provisioner.local-exec
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalInitProvisioner
2020/12/02 15:10:43 [TRACE] [walkApply] Entering eval tree: var.region
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:10:43 [TRACE] [walkApply] Exiting eval tree: var.region
2020/12/02 15:10:43 [TRACE] vertex "var.region": visit complete
2020/12/02 15:10:43 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"]"
2020/12/02 15:10:43 [TRACE] vertex "var.ami_small": evaluating
2020/12/02 15:10:43 [TRACE] [walkApply] Entering eval tree: var.ami_small
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:10:43 [TRACE] [walkApply] Exiting eval tree: var.ami_small
2020/12/02 15:10:43 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": starting visit (*terraform.NodeApplyableProvider)
2020/12/02 15:10:43 [TRACE] vertex "var.ami_small": visit complete
2020/12/02 15:10:43 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": evaluating
2020/12/02 15:10:43 [TRACE] [walkApply] Entering eval tree: provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalInitProvider
2020-12-02T15:10:43.233-0500 [DEBUG] plugin: starting plugin: path=C:\Terraform\terraform.exe args=[C:\Terraform\terraform.exe, internal-plugin, provisioner, local-exec]
2020-12-02T15:10:43.233-0500 [INFO]  plugin: configuring client automatic mTLS
2020-12-02T15:10:43.246-0500 [DEBUG] plugin: plugin started: path=C:\Terraform\terraform.exe pid=42148
2020-12-02T15:10:43.246-0500 [DEBUG] plugin: waiting for RPC address: path=C:\Terraform\terraform.exe
2020-12-02T15:10:43.267-0500 [DEBUG] plugin: starting plugin: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe args=[.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe]
2020-12-02T15:10:43.293-0500 [DEBUG] plugin: plugin started: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe pid=4104
2020-12-02T15:10:43.293-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe
2020-12-02T15:10:43.468-0500 [INFO]  plugin.terraform-provider-aws_v3.19.0_x5.exe: configuring server automatic mTLS: timestamp=2020-12-02T15:10:43.371-0500
2020-12-02T15:10:43.505-0500 [DEBUG] plugin: using plugin: version=5
2020-12-02T15:10:43.505-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2020-12-02T15:10:43.505-0500
2020/12/02 15:10:43 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/aws\"]" provider for provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:43 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalOpFilter
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalGetProvider
2020-12-02T15:10:43.578-0500 [TRACE] plugin.stdio: waiting for stdio data
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalOpFilter
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:10:43 [TRACE] eval: *terraform.EvalConfigProvider
2020/12/02 15:10:43 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/aws"]: using explicit config only
2020/12/02 15:10:43 [TRACE] GRPCProvider: GetSchema
2020/12/02 15:10:43 [TRACE] GRPCProvider: Configure
2020-12-02T15:10:43.675-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:43 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2020-12-02T15:10:43.676-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:43 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020-12-02T15:10:44.160-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:44 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2020/12/02 15:10:45 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:10:45 [TRACE] [walkApply] Exiting eval tree: provider["registry.terraform.io/hashicorp/aws"]
2020/12/02 15:10:45 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": visit complete
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_iam_access_key.userx (expand)"
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.policy_test (expand)"
2020/12/02 15:10:45 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_access_key.userx (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_iam_user.userx (expand)"
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user.userx (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_iam_user_policy.userx_policy (expand)"
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_access_key.userx (expand)": expanding dynamic subgraph
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user_policy.userx_policy (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user_policy.userx_policy (expand)": expanding dynamic subgraph
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_db_instance.default (expand)"
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user_policy.userx_policy (expand)": entering dynamic subgraph
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_access_key.userx (expand)": entering dynamic subgraph
2020/12/02 15:10:45 [TRACE] vertex "aws_db_instance.default (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_iam_user_policy.userx_policy"
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_iam_access_key.userx"
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_access_key.userx": starting visit (*terraform.NodeApplyableResource)
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user.userx (expand)": expanding dynamic subgraph
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_access_key.userx": evaluating
2020/12/02 15:10:45 [TRACE] [walkApply] Entering eval tree: aws_iam_access_key.userx
2020/12/02 15:10:45 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": expanding dynamic subgraph
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user.userx (expand)": entering dynamic subgraph
2020/12/02 15:10:45 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": entering dynamic subgraph
2020/12/02 15:10:45 [TRACE] vertex "aws_db_instance.default (expand)": expanding dynamic subgraph
2020/12/02 15:10:45 [TRACE] vertex "aws_db_instance.default (expand)": entering dynamic subgraph
2020/12/02 15:10:45 [TRACE] [walkApply] Exiting eval tree: aws_iam_access_key.userx
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_db_instance.default"
2020/12/02 15:10:45 [TRACE] vertex "aws_db_instance.default": starting visit (*terraform.NodeApplyableResource)
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_access_key.userx": visit complete
2020/12/02 15:10:45 [TRACE] vertex "aws_db_instance.default": evaluating
2020/12/02 15:10:45 [TRACE] [walkApply] Entering eval tree: aws_db_instance.default
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "data.aws_iam_policy_document.policy_test"
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_access_key.userx (expand)": dynamic subgraph completed successfully
2020/12/02 15:10:45 [TRACE] vertex "data.aws_iam_policy_document.policy_test": starting visit (*terraform.NodeApplyableResource)
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_access_key.userx (expand)": visit complete
2020/12/02 15:10:45 [TRACE] vertex "data.aws_iam_policy_document.policy_test": evaluating
2020/12/02 15:10:45 [TRACE] [walkApply] Entering eval tree: data.aws_iam_policy_document.policy_test
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_iam_user.userx"
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user_policy.userx_policy": starting visit (*terraform.NodeApplyableResource)
2020/12/02 15:10:45 [TRACE] [walkApply] Exiting eval tree: data.aws_iam_policy_document.policy_test
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user_policy.userx_policy": evaluating
2020/12/02 15:10:45 [TRACE] [walkApply] Entering eval tree: aws_iam_user_policy.userx_policy
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:10:45 [TRACE] [walkApply] Exiting eval tree: aws_iam_user_policy.userx_policy
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user_policy.userx_policy": visit complete
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user_policy.userx_policy (expand)": dynamic subgraph completed successfully
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user_policy.userx_policy (expand)": visit complete
2020/12/02 15:10:45 [TRACE] vertex "data.aws_iam_policy_document.policy_test": visit complete
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user.userx": starting visit (*terraform.NodeApplyableResource)
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user.userx": evaluating
2020/12/02 15:10:45 [TRACE] [walkApply] Entering eval tree: aws_iam_user.userx
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:10:45 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": dynamic subgraph completed successfully
2020/12/02 15:10:45 [TRACE] [walkApply] Exiting eval tree: aws_db_instance.default
2020/12/02 15:10:45 [TRACE] vertex "data.aws_iam_policy_document.policy_test (expand)": visit complete
2020/12/02 15:10:45 [TRACE] vertex "aws_db_instance.default": visit complete
2020/12/02 15:10:45 [TRACE] [walkApply] Exiting eval tree: aws_iam_user.userx
2020/12/02 15:10:45 [TRACE] vertex "aws_db_instance.default (expand)": dynamic subgraph completed successfully
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user.userx": visit complete
2020/12/02 15:10:45 [TRACE] vertex "aws_db_instance.default (expand)": visit complete
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user.userx (expand)": dynamic subgraph completed successfully
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user.userx (expand)": visit complete
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_db_instance.default"
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_iam_user.userx"
2020/12/02 15:10:45 [TRACE] vertex "aws_db_instance.default": starting visit (*terraform.NodeApplyableResourceInstance)
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user.userx": starting visit (*terraform.NodeApplyableResourceInstance)
2020/12/02 15:10:45 [TRACE] vertex "aws_db_instance.default": evaluating
2020/12/02 15:10:45 [TRACE] [walkApply] Entering eval tree: aws_db_instance.default
2020/12/02 15:10:45 [TRACE] vertex "aws_iam_user.userx": evaluating
2020/12/02 15:10:45 [TRACE] [walkApply] Entering eval tree: aws_iam_user.userx
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadDiff
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadDiff
2020/12/02 15:10:45 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_user.userx
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:45 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:10:45 [TRACE] EvalReadState: reading state for aws_iam_user.userx
2020/12/02 15:10:45 [TRACE] EvalReadDiff: Read Create change from plan for aws_db_instance.default
2020/12/02 15:10:45 [TRACE] EvalReadState: no state present for aws_iam_user.userx
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadDiff
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:45 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:10:45 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_user.userx
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalDiff
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:10:45 [TRACE] EvalReadState: reading state for aws_db_instance.default
2020/12/02 15:10:45 [TRACE] EvalReadState: no state present for aws_db_instance.default
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadDiff
2020/12/02 15:10:45 [TRACE] Re-validating config for "aws_iam_user.userx"
2020/12/02 15:10:45 [TRACE] EvalReadDiff: Read Create change from plan for aws_db_instance.default
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalDiff
2020/12/02 15:10:45 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:10:45 [TRACE] Re-validating config for "aws_db_instance.default"
2020/12/02 15:10:45 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:10:45 [TRACE] GRPCProvider: PlanResourceChange
2020/12/02 15:10:45 [TRACE] GRPCProvider: PlanResourceChange
2020/12/02 15:10:45 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.userx, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalCheckPlannedChange
2020/12/02 15:10:45 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:10:45 [TRACE] EvalReadState: reading state for aws_iam_user.userx
2020/12/02 15:10:45 [TRACE] EvalReadState: no state present for aws_iam_user.userx
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReduceDiff
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:45 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalApplyPre
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalApply
2020/12/02 15:10:45 [DEBUG] EvalApply: ProviderMeta config value set
2020/12/02 15:10:45 [DEBUG] aws_iam_user.userx: applying the planned Create change
2020/12/02 15:10:45 [TRACE] GRPCProvider: ApplyResourceChange
2020-12-02T15:10:45.027-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] Create IAM User request: {
2020-12-02T15:10:45.027-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   Path: "/system/",
2020-12-02T15:10:45.027-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   Tags: [{
2020-12-02T15:10:45.027-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:       Key: "source",
2020-12-02T15:10:45.027-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:       Value: "terraform"
2020-12-02T15:10:45.027-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:     }],
2020-12-02T15:10:45.027-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   UserName: "userx"
2020-12-02T15:10:45.027-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: }
2020/12/02 15:10:45 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_db_instance.default, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .performance_insights_enabled: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .auto_minor_version_upgrade: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .delete_automated_backups: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .copy_tags_to_snapshot: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .monitoring_interval: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .publicly_accessible: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalCheckPlannedChange
2020/12/02 15:10:45 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:10:45 [TRACE] EvalReadState: reading state for aws_db_instance.default
2020/12/02 15:10:45 [TRACE] EvalReadState: no state present for aws_db_instance.default
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReduceDiff
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:45 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalApplyPre
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalApply
2020/12/02 15:10:45 [DEBUG] EvalApply: ProviderMeta config value set
2020/12/02 15:10:45 [DEBUG] aws_db_instance.default: applying the planned Create change
2020/12/02 15:10:45 [TRACE] GRPCProvider: ApplyResourceChange
2020-12-02T15:10:45.030-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "vpc_security_group_ids" from ComputedKeys
2020-12-02T15:10:45.030-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "replicas" from ComputedKeys
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] DB Instance create configuration: {
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   AllocatedStorage: 20,
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   AutoMinorVersionUpgrade: true,
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   BackupRetentionPeriod: 0,
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   CopyTagsToSnapshot: false,
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   DBInstanceClass: "db.t2.micro",
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   DBInstanceIdentifier: "terraform-20201202201045030400000001",
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   DBName: "mydb",
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   DBParameterGroupName: "default.mysql5.7",
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   DeletionProtection: false,
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   Engine: "mysql",
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   EngineVersion: "5.7",
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   MasterUserPassword: "passwordtemporal",
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   MasterUsername: "user",
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   PubliclyAccessible: false,
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   StorageEncrypted: false,
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   StorageType: "gp2",
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   Tags: []
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: }
2020-12-02T15:10:45.031-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] Waiting for state to become: [success]
2020-12-02T15:10:45.769-0500 [DEBUG] plugin: using plugin: version=5
2020/12/02 15:10:45 [TRACE] [walkApply] Exiting eval tree: provisioner.local-exec
2020/12/02 15:10:45 [TRACE] vertex "provisioner.local-exec": visit complete
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_instance.example (expand)"
2020/12/02 15:10:45 [TRACE] vertex "aws_instance.example (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2020/12/02 15:10:45 [TRACE] vertex "aws_instance.example (expand)": expanding dynamic subgraph
2020/12/02 15:10:45 [TRACE] vertex "aws_instance.example (expand)": entering dynamic subgraph
2020-12-02T15:10:45.769-0500 [TRACE] plugin.stdio: waiting for stdio data
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_instance.example"
2020/12/02 15:10:45 [TRACE] vertex "aws_instance.example": starting visit (*terraform.NodeApplyableResource)
2020/12/02 15:10:45 [TRACE] vertex "aws_instance.example": evaluating
2020/12/02 15:10:45 [TRACE] [walkApply] Entering eval tree: aws_instance.example
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalWriteResourceState
2020/12/02 15:10:45 [TRACE] [walkApply] Exiting eval tree: aws_instance.example
2020/12/02 15:10:45 [TRACE] vertex "aws_instance.example": visit complete
2020/12/02 15:10:45 [TRACE] vertex "aws_instance.example (expand)": dynamic subgraph completed successfully
2020/12/02 15:10:45 [TRACE] vertex "aws_instance.example (expand)": visit complete
2020/12/02 15:10:45 [TRACE] dag/walk: visiting "aws_instance.example"
2020/12/02 15:10:45 [TRACE] vertex "aws_instance.example": starting visit (*terraform.NodeApplyableResourceInstance)
2020/12/02 15:10:45 [TRACE] vertex "aws_instance.example": evaluating
2020/12/02 15:10:45 [TRACE] [walkApply] Entering eval tree: aws_instance.example
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadDiff
2020/12/02 15:10:45 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.example
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:45 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:10:45 [TRACE] EvalReadState: reading state for aws_instance.example
2020/12/02 15:10:45 [TRACE] EvalReadState: no state present for aws_instance.example
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadDiff
2020/12/02 15:10:45 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.example
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalDiff
2020/12/02 15:10:45 [TRACE] Re-validating config for "aws_instance.example"
2020/12/02 15:10:45 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:10:45 [TRACE] GRPCProvider: PlanResourceChange
2020/12/02 15:10:45 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.example, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalCheckPlannedChange
2020/12/02 15:10:45 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:10:45 [TRACE] EvalReadState: reading state for aws_instance.example
2020/12/02 15:10:45 [TRACE] EvalReadState: no state present for aws_instance.example
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalReduceDiff
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:45 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalApplyPre
2020/12/02 15:10:45 [TRACE] eval: *terraform.EvalApply
2020/12/02 15:10:45 [DEBUG] EvalApply: ProviderMeta config value set
2020/12/02 15:10:45 [DEBUG] aws_instance.example: applying the planned Create change
2020/12/02 15:10:45 [TRACE] GRPCProvider: ApplyResourceChange
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "network_interface" from ComputedKeys
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "network_interface" from ComputedKeys
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "vpc_security_group_ids" from ComputedKeys
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "secondary_private_ips" from ComputedKeys
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "ephemeral_block_device" from ComputedKeys
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "security_groups" from ComputedKeys
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "ipv6_addresses" from ComputedKeys
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "ebs_block_device" from ComputedKeys
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "metadata_options" from ComputedKeys
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "volume_tags" from ComputedKeys
2020-12-02T15:10:45.779-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] setting computed for "root_block_device" from ComputedKeys
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] Run configuration: {
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   DisableApiTermination: false,
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   EbsOptimized: false,
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   HibernationOptions: {
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:     Configured: false
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   },
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   IamInstanceProfile: {
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:     Name: ""
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   },
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   ImageId: "ami-09558250a3419e7d0",
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   InstanceType: "t2.micro",
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   MaxCount: 1,
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   MinCount: 1,
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   Monitoring: {
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:     Enabled: false
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   },
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   Placement: {
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:     AvailabilityZone: "",
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:     GroupName: ""
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   }
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: }
2020-12-02T15:10:45.780-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:45 [DEBUG] Waiting for state to become: [success]
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalMaybeTainted
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:10:46 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_user.userx
2020/12/02 15:10:46 [TRACE] EvalWriteState: writing current state object for aws_iam_user.userx
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalApplyProvisioners
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalMaybeTainted
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:10:46 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_user.userx
2020/12/02 15:10:46 [TRACE] EvalWriteState: writing current state object for aws_iam_user.userx
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalApplyPost
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalUpdateStateHook
2020/12/02 15:10:46 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2020/12/02 15:10:46 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 21
2020/12/02 15:10:46 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/12/02 15:10:46 [TRACE] [walkApply] Exiting eval tree: aws_iam_user.userx
2020/12/02 15:10:46 [TRACE] vertex "aws_iam_user.userx": visit complete
2020/12/02 15:10:46 [TRACE] dag/walk: visiting "aws_iam_access_key.userx"
2020/12/02 15:10:46 [TRACE] vertex "aws_iam_access_key.userx": starting visit (*terraform.NodeApplyableResourceInstance)
2020/12/02 15:10:46 [TRACE] vertex "aws_iam_access_key.userx": evaluating
2020/12/02 15:10:46 [TRACE] [walkApply] Entering eval tree: aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalSequence
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalReadDiff
2020/12/02 15:10:46 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:46 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:10:46 [TRACE] EvalReadState: reading state for aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] EvalReadState: no state present for aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalReadDiff
2020/12/02 15:10:46 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalDiff
2020/12/02 15:10:46 [TRACE] Re-validating config for "aws_iam_access_key.userx"
2020/12/02 15:10:46 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/12/02 15:10:46 [TRACE] GRPCProvider: PlanResourceChange
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalCheckPlannedChange
2020/12/02 15:10:46 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalGetProvider
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalReadState
2020/12/02 15:10:46 [TRACE] EvalReadState: reading state for aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] EvalReadState: no state present for aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalReduceDiff
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:46 [TRACE] eval: terraform.EvalNoop
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalApplyPre
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalApply
2020/12/02 15:10:46 [DEBUG] EvalApply: ProviderMeta config value set
2020/12/02 15:10:46 [DEBUG] aws_iam_access_key.userx: applying the planned Create change
2020/12/02 15:10:46 [TRACE] GRPCProvider: ApplyResourceChange
2020-12-02T15:10:46.350-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:46 [INFO] Waiting for DB Instance (terraform-20201202201045030400000001) to be available
2020-12-02T15:10:46.350-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:46 [DEBUG] Waiting for state to become: [available storage-optimization]
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalMaybeTainted
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:10:46 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] EvalWriteState: writing current state object for aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalApplyProvisioners
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalMaybeTainted
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:10:46 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] EvalWriteState: writing current state object for aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalApplyPost
2020/12/02 15:10:46 [TRACE] eval: *terraform.EvalUpdateStateHook
2020/12/02 15:10:46 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2020/12/02 15:10:46 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 22
2020/12/02 15:10:46 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/12/02 15:10:46 [TRACE] [walkApply] Exiting eval tree: aws_iam_access_key.userx
2020/12/02 15:10:46 [TRACE] vertex "aws_iam_access_key.userx": visit complete
2020-12-02T15:10:47.217-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:47 [INFO] Instance ID: i-0d5e6a12198e4de10
2020-12-02T15:10:47.217-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:47 [DEBUG] Waiting for instance (i-0d5e6a12198e4de10) to become running
2020-12-02T15:10:47.217-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:47 [DEBUG] Waiting for state to become: [running]
2020/12/02 15:10:48 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.example"
2020/12/02 15:10:48 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_iam_user_policy.userx_policy"
2020/12/02 15:10:48 [TRACE] dag/walk: vertex "data.aws_iam_policy_document.policy_test" is waiting for "aws_instance.example"
2020/12/02 15:10:48 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/12/02 15:10:51 [TRACE] dag/walk: vertex "aws_iam_user_policy.userx_policy" is waiting for "data.aws_iam_policy_document.policy_test"
2020/12/02 15:10:51 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_db_instance.default"
2020/12/02 15:10:53 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.example"
2020/12/02 15:10:53 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_iam_user_policy.userx_policy"
2020/12/02 15:10:53 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/12/02 15:10:53 [TRACE] dag/walk: vertex "data.aws_iam_policy_document.policy_test" is waiting for "aws_instance.example"
2020/12/02 15:10:56 [TRACE] dag/walk: vertex "aws_iam_user_policy.userx_policy" is waiting for "data.aws_iam_policy_document.policy_test"
2020/12/02 15:10:56 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_db_instance.default"
2020-12-02T15:10:57.790-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:10:57 [TRACE] Waiting 3s before next try
2020/12/02 15:10:58 [TRACE] dag/walk: vertex "data.aws_iam_policy_document.policy_test" is waiting for "aws_instance.example"
2020/12/02 15:10:58 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.example"
2020/12/02 15:10:58 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_iam_user_policy.userx_policy"
2020/12/02 15:10:58 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/12/02 15:11:01 [TRACE] dag/walk: vertex "aws_iam_user_policy.userx_policy" is waiting for "data.aws_iam_policy_document.policy_test"
2020-12-02T15:11:01.238-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:11:01 [TRACE] Waiting 6s before next try
2020/12/02 15:11:01 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_db_instance.default"
2020/12/02 15:11:03 [TRACE] dag/walk: vertex "data.aws_iam_policy_document.policy_test" is waiting for "aws_instance.example"
2020/12/02 15:11:03 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.example"
2020/12/02 15:11:03 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/12/02 15:11:03 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_iam_user_policy.userx_policy"
2020/12/02 15:11:06 [TRACE] dag/walk: vertex "aws_iam_user_policy.userx_policy" is waiting for "data.aws_iam_policy_document.policy_test"
2020/12/02 15:11:06 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_db_instance.default"
2020/12/02 15:11:08 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_iam_user_policy.userx_policy"
2020/12/02 15:11:08 [TRACE] dag/walk: vertex "provisioner.local-exec (close)" is waiting for "aws_instance.example"
2020/12/02 15:11:08 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/12/02 15:11:08 [TRACE] dag/walk: vertex "data.aws_iam_policy_document.policy_test" is waiting for "aws_instance.example"
2020-12-02T15:11:09.700-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:11:09 [DEBUG] Setting Security Group IDs: []string{"sg-50408321"}
2020-12-02T15:11:09.700-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:11:09 [DEBUG] Setting Security Group Names: []string{"default"}
2020/12/02 15:11:11 [TRACE] dag/walk: vertex "aws_iam_user_policy.userx_policy" is waiting for "data.aws_iam_policy_document.policy_test"
2020/12/02 15:11:11 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_db_instance.default"
2020/12/02 15:11:11 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_instance.example, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .monitoring: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .iam_instance_profile: was null, but now cty.StringVal("")
      - .credit_specification: block count changed from 0 to 1
2020/12/02 15:11:11 [TRACE] eval: *terraform.EvalMaybeTainted
2020/12/02 15:11:11 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:11:11 [TRACE] EvalWriteState: recording 0 dependencies for aws_instance.example
2020/12/02 15:11:11 [TRACE] EvalWriteState: writing current state object for aws_instance.example
2020/12/02 15:11:11 [TRACE] eval: *terraform.EvalApplyProvisioners
2020/12/02 15:11:11 [TRACE] EvalApplyProvisioners: provisioning aws_instance.example with "local-exec"
2020/12/02 15:11:11 [WARN] Errors while provisioning aws_instance.example with "local-exec", so aborting
2020/12/02 15:11:11 [TRACE] EvalApplyProvisioners: aws_instance.example provisioning failed, but we will continue anyway at the caller's request
2020/12/02 15:11:11 [TRACE] eval: *terraform.EvalMaybeTainted
2020/12/02 15:11:11 [TRACE] EvalMaybeTainted: aws_instance.example encountered an error during creation, so it is now marked as tainted
2020/12/02 15:11:11 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:11:11 [TRACE] EvalWriteState: recording 0 dependencies for aws_instance.example
2020/12/02 15:11:11 [TRACE] EvalWriteState: writing current state object for aws_instance.example
2020/12/02 15:11:11 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:11:11 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:11:11 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:11:11 [TRACE] eval: *terraform.EvalApplyPost
2020/12/02 15:11:11 [ERROR] eval: *terraform.EvalApplyPost, err: 1 error occurred:
	* Error running command 'yum -y groupinstall "Development Tools"
yum -y install openssl-devel ncurses-devel
mkdir -p otp
curl -LS "http://erlang.org/download/otp_src_17.0.tar.gz" --output otp.tar.gz
tar xfz otp.tar.gz -C otp --strip-components=1
cd otp/
./configure && make && make install
cd ../
mkdir -p elixir
curl -LS "https://github.com/elixir-lang/elixir/archive/v1.11.2.tar.gz" --output elixir.tar.gz
tar xfz elixir.tar.gz -C elixir --strip-components=1
cd elixir/
make install -e PATH="elixir/:/usr/local/bin"
cd ../
curl -sL https://rpm.nodesource.com/setup_12.x | bash -
yum install nodejs -y
mkdir app
mix local.hex --force

': exit status 1. Output: "yum" no se reconoce como un comando interno o externo,
programa o archivo por lotes ejecutable.


2020/12/02 15:11:11 [ERROR] eval: *terraform.EvalSequence, err: Error running command 'yum -y groupinstall "Development Tools"
yum -y install openssl-devel ncurses-devel
mkdir -p otp
curl -LS "http://erlang.org/download/otp_src_17.0.tar.gz" --output otp.tar.gz
tar xfz otp.tar.gz -C otp --strip-components=1
cd otp/
./configure && make && make install
cd ../
mkdir -p elixir
curl -LS "https://github.com/elixir-lang/elixir/archive/v1.11.2.tar.gz" --output elixir.tar.gz
tar xfz elixir.tar.gz -C elixir --strip-components=1
cd elixir/
make install -e PATH="elixir/:/usr/local/bin"
cd ../
curl -sL https://rpm.nodesource.com/setup_12.x | bash -
yum install nodejs -y
mkdir app
mix local.hex --force

': exit status 1. Output: "yum" no se reconoce como un comando interno o externo,
programa o archivo por lotes ejecutable.
2020/12/02 15:11:11 [TRACE] [walkApply] Exiting eval tree: aws_instance.example
2020/12/02 15:11:11 [TRACE] vertex "aws_instance.example": visit complete
2020/12/02 15:11:11 [TRACE] dag/walk: upstream of "provisioner.local-exec (close)" errored, so skipping
2020/12/02 15:11:11 [TRACE] dag/walk: upstream of "data.aws_iam_policy_document.policy_test" errored, so skipping
2020/12/02 15:11:11 [TRACE] dag/walk: upstream of "aws_iam_user_policy.userx_policy" errored, so skipping
2020/12/02 15:11:13 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020-12-02T15:11:16.350-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:11:16 [DEBUG] DB Instance describe configuration: {
2020-12-02T15:11:16.350-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe:   DBInstanceIdentifier: "terraform-20201202201045030400000001"
2020-12-02T15:11:16.350-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: }
2020/12/02 15:11:16 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_db_instance.default"
2020/12/02 15:11:16 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_db_instance.default"
2020-12-02T15:11:16.890-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:11:16 [DEBUG] DB Instance status for instance terraform-20201202201045030400000001: creating
2020-12-02T15:11:16.890-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 2020/12/02 15:11:16 [TRACE] Waiting 10s before next try
2020/12/02 15:11:18 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/12/02 15:11:21 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_db_instance.default"
2020/12/02 15:11:21 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_db_instance.default"
2020/12/02 15:11:22 [TRACE] backend/local: waiting for the running operation to stop
2020/12/02 15:11:22 [WARN] terraform: Stop called, initiating interrupt sequence
2020/12/02 15:11:22 [WARN] terraform: run context exists, stopping
2020/12/02 15:11:22 [INFO] terraform: waiting for graceful stop to complete
2020/12/02 15:11:22 [TRACE] Context: requesting providers and provisioners to gracefully stop
2020/12/02 15:11:22 [TRACE] GRPCProvider: Stop
2020-12-02T15:11:22.136-0500 [TRACE] plugin.terraform-provider-aws_v3.19.0_x5.exe: plugin received interrupt signal, ignoring: count=1 timestamp=2020-12-02T15:11:22.136-0500
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: panic: close of nil channel
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: goroutine 158 [running]:
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: github.com/hashicorp/terraform-plugin-go/tfprotov5/server.(*server).stop(0xc0019021e0)
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/server/server.go:201 +0x78
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: github.com/hashicorp/terraform-plugin-go/tfprotov5/server.(*server).Stop(0xc0019021e0, 0x7022360, 0xc000795ad0, 0xc000795b00, 0xc0019021e0, 0xc000795ad0, 0xc0010bfba0)
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/server/server.go:215 +0xa8
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: github.com/hashicorp/terraform-plugin-go/tfprotov5/internal/tfplugin5._Provider_Stop_Handler(0x624eb20, 0xc0019021e0, 0x7022360, 0xc000795ad0, 0xc00118a6c0, 0x0, 0x7022360, 0xc000795ad0, 0x0, 0x0)
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/internal/tfplugin5/tfplugin5_grpc.pb.go:434 +0x21e
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: google.golang.org/grpc.(*Server).processUnaryRPC(0xc00000a8c0, 0x70478a0, 0xc001051200, 0xc00028a600, 0xc000c0ae70, 0xa856e48, 0x0, 0x0, 0x0)
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:1194 +0x511
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: google.golang.org/grpc.(*Server).handleStream(0xc00000a8c0, 0x70478a0, 0xc001051200, 0xc00028a600, 0x0)
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:1517 +0xd04
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: google.golang.org/grpc.(*Server).serveStreams.func1.2(0xc000f3cc50, 0xc00000a8c0, 0x70478a0, 0xc001051200, 0xc00028a600)
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:859 +0xa8
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-12-02T15:11:22.139-0500 [DEBUG] plugin.terraform-provider-aws_v3.19.0_x5.exe: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:857 +0x20b
2020-12-02T15:11:22.153-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020/12/02 15:11:22 [DEBUG] aws_db_instance.default: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalMaybeTainted
2020/12/02 15:11:22 [TRACE] EvalMaybeTainted: aws_db_instance.default encountered an error during creation, so it is now marked as tainted
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:11:22 [TRACE] EvalWriteState: removing state object for aws_db_instance.default
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalApplyProvisioners
2020/12/02 15:11:22 [TRACE] EvalApplyProvisioners: aws_db_instance.default has no state, so skipping provisioners
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalMaybeTainted
2020/12/02 15:11:22 [TRACE] EvalMaybeTainted: aws_db_instance.default encountered an error during creation, so it is now marked as tainted
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalWriteState
2020/12/02 15:11:22 [TRACE] EvalWriteState: removing state object for aws_db_instance.default
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalIf
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalWriteDiff
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalApplyPost
2020/12/02 15:11:22 [WARN] Early exit triggered by hook: *terraform.stopHook
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalApplyPost, early exit err: early exit
2020/12/02 15:11:22 [TRACE] eval: *terraform.EvalSequence, early exit err: early exit
2020/12/02 15:11:22 [TRACE] [walkApply] Exiting eval tree: aws_db_instance.default
2020/12/02 15:11:22 [TRACE] vertex "aws_db_instance.default": visit complete
2020/12/02 15:11:22 [TRACE] dag/walk: upstream of "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" errored, so skipping
2020/12/02 15:11:22 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/12/02 15:11:22 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/12/02 15:11:22 [WARN] terraform: stop complete
2020/12/02 15:11:22 [TRACE] backend/local: graceful stop has completed
2020/12/02 15:11:22 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2020/12/02 15:11:22 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 23
2020/12/02 15:11:22 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/12/02 15:11:22 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/12/02 15:11:22 [TRACE] statemgr.Filesystem: unlocked by closing terraform.tfstate
2020-12-02T15:11:22.159-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2020-12-02T15:11:22.170-0500 [DEBUG] plugin: plugin process exited: path=.terraform/plugins/registry.terraform.io/hashicorp/aws/3.19.0/windows_amd64/terraform-provider-aws_v3.19.0_x5.exe pid=4104 error="exit status 2"
2020-12-02T15:11:22.170-0500 [DEBUG] plugin: plugin exited
2020-12-02T15:11:22.187-0500 [DEBUG] plugin: plugin process exited: path=C:\Terraform\terraform.exe pid=42148
2020-12-02T15:11:22.187-0500 [DEBUG] plugin: plugin exited
